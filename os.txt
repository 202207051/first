상호배제
-한번에 프로세스에 하나의 자원만 사용가능
-사용중인 자원에 다른 프로세스가 사용하려면 해당 자원의 요청이 끝날때 까지 대기

점유와 대기
-최소 하나 이상 자원을 보유해야함
-다른 프로세스에 할당된 자원을 얻으려고 대기하는 프로세스가 있어야함

비선점
자원을 강제로 뺏을 수 없음
자원 점유상태인 프로세스가 끝나야 해제

순환대기
두개 이상의 프로세스가 점유 대기상태에 원형을 이루며 서로 자원을 기다리는 상태

기아
작업이 결코 사용할 수 없이 계속 기다리는 결과를 예방하려는 자원 할당할 때 발생하는 결과

중첩
-운영체제 영역과 메모리 일부 영역에 실행에 필요한 명령어나 데이터 저장.
-나머지 중첩 영역에 필요하면 호출하여 메모리에 적재하는 방법

동적 적재
-필요한 코드만 실행중에 메모리에 올림
-메모리를 절약할 수 있음
-큰 프로그램 처리 가능
-오류가 날 수 있음

스와핑
-프로그램이 메모리보다 클 때 당장 필요하지 않는 프로세스를 디스크로 보내는 방법
-스왑 아웃된 프로세스가 필요하면 다시 메모리로 올림

내부 단편화
할당받은 메모리 공간에 실제로 사용되지 않는 공간이 생기는 현상

외부 단편화
총 메모리 공간을 충분하나 그 공간이 연속적이지 않고 또 너무 작게 나뉘어서 큰 프로그램 처리가 어려운 현상

페이징
작업 크기를 동일한 크기의 페이지로 나누는 방법

세그먼트
프로세스 관점일 지원하며
메모리를 크기가 변할 수 없는 세그먼트로 나눈 방법

비교
세그먼트는 페이징과 달리 프로그램을 나누는 크기가 변함
세그먼트는 사용자 공유가 용이 하지만 페이징은 용이하지 않음
세그먼트는 수용할 있는 크기가 심하게 변하지만 페ㅣ징은 
